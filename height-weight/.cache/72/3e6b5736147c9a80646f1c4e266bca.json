{"id":"../node_modules/vega-lite/build/src/compile/mark/encode/offset.js","dependencies":[{"name":"/Users/mac/Documents/C:C++/html/node_modules/vega-lite/build/src/compile/mark/encode/offset.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/mac/Documents/C:C++/html/package.json","includedInParent":true,"mtime":1582124084698},{"name":"/Users/mac/Documents/C:C++/html/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOffset = getOffset;\n\nfunction getOffset(channel, markDef) {\n  const offsetChannel = channel + 'Offset'; // Need to cast as the type can't be inferred automatically\n  // TODO: in the future read from encoding channel too\n\n  const markDefOffsetValue = markDef[offsetChannel];\n\n  if (markDefOffsetValue) {\n    return markDefOffsetValue;\n  }\n\n  return undefined;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":7,"column":6},"generated":{"line":8,"column":0}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":7,"column":16},"generated":{"line":8,"column":9}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":7,"column":6},"generated":{"line":8,"column":18}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":7,"column":26},"generated":{"line":8,"column":19}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":7,"column":6},"generated":{"line":8,"column":26}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":7,"column":52},"generated":{"line":8,"column":28}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":7,"column":6},"generated":{"line":8,"column":35}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":7,"column":68},"generated":{"line":8,"column":37}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":9,"column":0}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":8,"column":8},"generated":{"line":9,"column":8}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":8,"column":21},"generated":{"line":9,"column":21}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":8,"column":25},"generated":{"line":9,"column":24}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":8,"column":32},"generated":{"line":9,"column":31}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":8,"column":35},"generated":{"line":9,"column":34}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":9,"column":42}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":7,"column":68},"generated":{"line":9,"column":43}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":8,"column":97},"generated":{"line":9,"column":44}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":10,"column":0}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":12,"column":0}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":11,"column":8},"generated":{"line":12,"column":8}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":11,"column":26},"generated":{"line":12,"column":26}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":11,"column":29},"generated":{"line":12,"column":29}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":11,"column":36},"generated":{"line":12,"column":36}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":11,"column":37},"generated":{"line":12,"column":37}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":11,"column":36},"generated":{"line":12,"column":50}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":12,"column":51}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":14,"column":0}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":12,"column":6},"generated":{"line":14,"column":6}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":14,"column":24}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":12,"column":26},"generated":{"line":14,"column":26}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":15,"column":0}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":13,"column":11},"generated":{"line":15,"column":11}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":15,"column":29}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":14,"column":3},"generated":{"line":16,"column":0}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":18,"column":0}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":16,"column":9},"generated":{"line":18,"column":9}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":18,"column":18}},{"source":"../../../../../src/compile/mark/encode/offset.ts","name":null,"original":{"line":17,"column":1},"generated":{"line":19,"column":0}}],"sources":{"../../../../../src/compile/mark/encode/offset.ts":"/**\n * Utility files for producing Vega ValueRef for marks\n */\nimport {PositionChannel} from '../../../channel';\nimport {MarkDef} from '../../../mark';\n\nexport function getOffset(channel: PositionChannel, markDef: MarkDef) {\n  const offsetChannel = (channel + 'Offset') as 'xOffset' | 'yOffset' | 'x2Offset' | 'y2Offset'; // Need to cast as the type can't be inferred automatically\n\n  // TODO: in the future read from encoding channel too\n  const markDefOffsetValue = markDef[offsetChannel];\n  if (markDefOffsetValue) {\n    return markDefOffsetValue;\n  }\n\n  return undefined;\n}\n"},"lineCount":null}},"error":null,"hash":"7cc7eee9f3add0884a6ece4425d178d3","cacheData":{"env":{}}}