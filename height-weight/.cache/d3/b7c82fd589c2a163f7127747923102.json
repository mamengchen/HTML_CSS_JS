{"id":"../node_modules/vega-lite/build/src/compile/mark/encode/conditional.js","dependencies":[{"name":"/Users/mac/Documents/C:C++/html/node_modules/vega-lite/build/src/compile/mark/encode/conditional.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/mac/Documents/C:C++/html/package.json","includedInParent":true,"mtime":1582124084698},{"name":"/Users/mac/Documents/C:C++/html/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":499162500000},{"name":"vega-util","loc":{"line":1,"column":22},"parent":"/Users/mac/Documents/C:C++/html/node_modules/vega-lite/build/src/compile/mark/encode/conditional.js","resolved":"/Users/mac/Documents/C:C++/html/node_modules/vega-util/index.js"},{"name":"../../../channeldef","loc":{"line":2,"column":39},"parent":"/Users/mac/Documents/C:C++/html/node_modules/vega-lite/build/src/compile/mark/encode/conditional.js","resolved":"/Users/mac/Documents/C:C++/html/node_modules/vega-lite/build/src/channeldef.js"},{"name":"../../predicate","loc":{"line":3,"column":27},"parent":"/Users/mac/Documents/C:C++/html/node_modules/vega-lite/build/src/compile/mark/encode/conditional.js","resolved":"/Users/mac/Documents/C:C++/html/node_modules/vega-lite/build/src/compile/predicate.js"},{"name":"../../selection/parse","loc":{"line":4,"column":40},"parent":"/Users/mac/Documents/C:C++/html/node_modules/vega-lite/build/src/compile/mark/encode/conditional.js","resolved":"/Users/mac/Documents/C:C++/html/node_modules/vega-lite/build/src/compile/selection/parse.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.wrapCondition = wrapCondition;\n\nvar _vegaUtil = require(\"vega-util\");\n\nvar _channeldef = require(\"../../../channeldef\");\n\nvar _predicate = require(\"../../predicate\");\n\nvar _parse = require(\"../../selection/parse\");\n\n/**\n * Return a mixin that includes a Vega production rule for a Vega-Lite conditional channel definition.\n * or a simple mixin if channel def has no condition.\n */\nfunction wrapCondition(model, channelDef, vgChannel, refFn) {\n  const condition = channelDef && channelDef.condition;\n  const valueRef = refFn(channelDef);\n\n  if (condition) {\n    const conditions = (0, _vegaUtil.array)(condition);\n    const vgConditions = conditions.map(c => {\n      const conditionValueRef = refFn(c);\n      const test = (0, _channeldef.isConditionalSelection)(c) ? (0, _parse.parseSelectionPredicate)(model, c.selection) : (0, _predicate.expression)(model, c.test);\n      return Object.assign({\n        test\n      }, conditionValueRef);\n    });\n    return {\n      [vgChannel]: [...vgConditions, ...(valueRef !== undefined ? [valueRef] : [])]\n    };\n  } else {\n    return valueRef !== undefined ? {\n      [vgChannel]: valueRef\n    } : {};\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":20,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":19,"column":16},"generated":{"line":20,"column":9}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":20,"column":22}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":20,"column":2},"generated":{"line":20,"column":23}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":20,"column":28}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":20,"column":30}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":20,"column":40}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":20,"column":42}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":20,"column":51}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":20,"column":53}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":20,"column":58}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":23,"column":80},"generated":{"line":20,"column":60}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":21,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":25,"column":8},"generated":{"line":21,"column":8}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":25,"column":17},"generated":{"line":21,"column":17}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":25,"column":20},"generated":{"line":21,"column":20}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":25,"column":30},"generated":{"line":21,"column":30}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":25,"column":34},"generated":{"line":21,"column":34}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":25,"column":44},"generated":{"line":21,"column":44}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":25,"column":45},"generated":{"line":21,"column":45}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":21,"column":54}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":22,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":22,"column":8}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":26,"column":16},"generated":{"line":22,"column":16}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":26,"column":19},"generated":{"line":22,"column":19}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":22,"column":24}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":26,"column":25},"generated":{"line":22,"column":25}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":22,"column":35}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":22,"column":36}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":24,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":27,"column":6},"generated":{"line":24,"column":6}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":24,"column":15}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":27,"column":17},"generated":{"line":24,"column":17}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":25,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":28,"column":10},"generated":{"line":25,"column":10}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":28,"column":20},"generated":{"line":25,"column":20}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":28,"column":23},"generated":{"line":25,"column":23}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":28,"column":29},"generated":{"line":25,"column":44}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":28,"column":23},"generated":{"line":25,"column":53}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":25,"column":54}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":26,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":29,"column":10},"generated":{"line":26,"column":10}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":29,"column":22},"generated":{"line":26,"column":22}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":29,"column":25},"generated":{"line":26,"column":25}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":29,"column":35},"generated":{"line":26,"column":35}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":29,"column":36},"generated":{"line":26,"column":36}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":29,"column":25},"generated":{"line":26,"column":39}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":29,"column":40},"generated":{"line":26,"column":40}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":29,"column":41},"generated":{"line":26,"column":41}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":29,"column":44},"generated":{"line":26,"column":45}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":30,"column":6},"generated":{"line":27,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":30,"column":12},"generated":{"line":27,"column":12}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":30,"column":29},"generated":{"line":27,"column":29}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":30,"column":32},"generated":{"line":27,"column":32}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":30,"column":37},"generated":{"line":27,"column":37}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":30,"column":38},"generated":{"line":27,"column":38}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":30,"column":37},"generated":{"line":27,"column":39}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":30,"column":6},"generated":{"line":27,"column":40}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":28,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":12},"generated":{"line":28,"column":12}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":16},"generated":{"line":28,"column":16}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":19},"generated":{"line":28,"column":19}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":42},"generated":{"line":28,"column":59}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":19},"generated":{"line":28,"column":60}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":47},"generated":{"line":28,"column":64}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":71},"generated":{"line":28,"column":100}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":47},"generated":{"line":28,"column":105}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":78},"generated":{"line":28,"column":107}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":79},"generated":{"line":28,"column":108}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":80},"generated":{"line":28,"column":109}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":47},"generated":{"line":28,"column":118}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":19},"generated":{"line":28,"column":119}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":93},"generated":{"line":28,"column":122}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":104},"generated":{"line":28,"column":149}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":93},"generated":{"line":28,"column":154}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":111},"generated":{"line":28,"column":156}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":112},"generated":{"line":28,"column":157}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":113},"generated":{"line":28,"column":158}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":93},"generated":{"line":28,"column":162}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":28,"column":163}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":32,"column":6},"generated":{"line":29,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":32,"column":6},"generated":{"line":29,"column":13}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":32,"column":6},"generated":{"line":29,"column":19}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":32,"column":6},"generated":{"line":29,"column":20}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":32,"column":6},"generated":{"line":29,"column":26}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":32,"column":6},"generated":{"line":29,"column":27}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":33,"column":8},"generated":{"line":30,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":33,"column":8},"generated":{"line":30,"column":8}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":32,"column":6},"generated":{"line":31,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":32,"column":6},"generated":{"line":31,"column":7}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":34,"column":11},"generated":{"line":31,"column":9}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":32,"column":6},"generated":{"line":31,"column":26}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":32,"column":6},"generated":{"line":31,"column":27}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":36,"column":5},"generated":{"line":32,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":29,"column":25},"generated":{"line":32,"column":5}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":32,"column":6}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":33,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":37,"column":11},"generated":{"line":33,"column":11}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":34,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":38,"column":7},"generated":{"line":34,"column":7}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":34,"column":16}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":38,"column":19},"generated":{"line":34,"column":19}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":38,"column":20},"generated":{"line":34,"column":20}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":38,"column":23},"generated":{"line":34,"column":23}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":38,"column":19},"generated":{"line":34,"column":35}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":38,"column":37},"generated":{"line":34,"column":37}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":38,"column":41},"generated":{"line":34,"column":41}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":38,"column":49},"generated":{"line":34,"column":49}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":38,"column":54},"generated":{"line":34,"column":54}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":38,"column":41},"generated":{"line":34,"column":63}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":38,"column":66},"generated":{"line":34,"column":66}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":38,"column":67},"generated":{"line":34,"column":67}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":38,"column":66},"generated":{"line":34,"column":75}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":38,"column":41},"generated":{"line":34,"column":76}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":38,"column":79},"generated":{"line":34,"column":79}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":38,"column":37},"generated":{"line":34,"column":81}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":38,"column":19},"generated":{"line":34,"column":82}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":37,"column":11},"generated":{"line":35,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":35,"column":5}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":40,"column":3},"generated":{"line":36,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":36,"column":3}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":40,"column":9},"generated":{"line":36,"column":9}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":4},"generated":{"line":37,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":11},"generated":{"line":37,"column":11}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":19},"generated":{"line":37,"column":19}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":24},"generated":{"line":37,"column":24}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":11},"generated":{"line":37,"column":33}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":36},"generated":{"line":37,"column":36}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":37},"generated":{"line":38,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":38},"generated":{"line":38,"column":7}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":37},"generated":{"line":38,"column":16}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":50},"generated":{"line":38,"column":19}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":36},"generated":{"line":39,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":11},"generated":{"line":39,"column":5}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":62},"generated":{"line":39,"column":8}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":41,"column":4},"generated":{"line":39,"column":10}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":42,"column":3},"generated":{"line":40,"column":0}},{"source":"../../../../../src/compile/mark/encode/conditional.ts","name":null,"original":{"line":43,"column":1},"generated":{"line":41,"column":0}}],"sources":{"../../../../../src/compile/mark/encode/conditional.ts":"import {array} from 'vega-util';\nimport {\n  ChannelDef,\n  Conditional,\n  FieldDef,\n  isConditionalSelection,\n  ValueDef,\n  ValueOrGradientOrText\n} from '../../../channeldef';\nimport {VgEncodeEntry, VgValueRef} from '../../../vega.schema';\nimport {expression} from '../../predicate';\nimport {parseSelectionPredicate} from '../../selection/parse';\nimport {UnitModel} from '../../unit';\n\n/**\n * Return a mixin that includes a Vega production rule for a Vega-Lite conditional channel definition.\n * or a simple mixin if channel def has no condition.\n */\nexport function wrapCondition<FD extends FieldDef<any>, V extends ValueOrGradientOrText>(\n  model: UnitModel,\n  channelDef: ChannelDef<FD, V>,\n  vgChannel: string,\n  refFn: (cDef: ChannelDef<FD, V> | Conditional<ValueDef<V> | FD>) => VgValueRef\n): VgEncodeEntry {\n  const condition = channelDef && channelDef.condition;\n  const valueRef = refFn(channelDef);\n  if (condition) {\n    const conditions = array(condition);\n    const vgConditions = conditions.map(c => {\n      const conditionValueRef = refFn(c);\n      const test = isConditionalSelection(c) ? parseSelectionPredicate(model, c.selection) : expression(model, c.test);\n      return {\n        test,\n        ...conditionValueRef\n      };\n    });\n    return {\n      [vgChannel]: [...vgConditions, ...(valueRef !== undefined ? [valueRef] : [])]\n    };\n  } else {\n    return valueRef !== undefined ? {[vgChannel]: valueRef} : {};\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"8ce2cbb71d34cdbae54ef99ec59b1aa0","cacheData":{"env":{}}}